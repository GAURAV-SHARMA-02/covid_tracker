{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\projects\\\\covid_tracker\\\\covid__tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./MapContainer\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Table from './Table';\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [country, setInputcountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, SetMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all').then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2 //IND, UK, USA\n\n        }));\n        const sortedData = sortData(data);\n        setCountries(countries);\n        SetMapCountries(data);\n        setTableData(sortedData);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onChangingCountry = async event => {\n    const countryCode = event.target.value; // setInputcountry(countryCode);\n\n    const url = countryCode == 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`; //https://disease.sh/v3/covid-19/all    ----> World wide url\n    // https://disease.sh/v3/covid-19/countries/[countryCode] ---->country wise\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setInputcountry(countryCode);\n      setCountryInfo(data); // console.table(data.countryInfo);\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4); // console.table(mapCenter);\n    });\n  }; // console.log(countryInfo);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onChangingCountry,\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Covid Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Death\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: SetMapCountries,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"app__right\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Live cases by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Worldwide new Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wBm+btHESXGXHJRge3FC8zJsB1E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/projects/covid_tracker/covid__tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","InfoBox","Map","Card","CardContent","Table","sortData","LineGraph","App","country","setInputcountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","SetMapCountries","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onChangingCountry","event","countryCode","target","url","long","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,0BAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6Bd,QAAQ,CAAC,WAAD,CAA3C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC;AAACyB,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAC,CAAC;AAArB,GAAD,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ4B,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAG;AACXjB,MAAAA,cAAc,CAACiB,IAAD,CAAd;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAhC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiC,gBAAgB,GAAG,YAAY;AACnC,YAAML,KAAK,CAAC,0CAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACd,cAAMhB,SAAS,GAAGgB,IAAI,CAACE,GAAL,CAAUtB,OAAD,KAAc;AACvCuB,UAAAA,IAAI,EAAEvB,OAAO,CAACA,OADyB;AAEvCwB,UAAAA,KAAK,EAAExB,OAAO,CAACE,WAAR,CAAoBuB,IAFY,CAEN;;AAFM,SAAd,CAAT,CAAlB;AAKA,cAAMC,UAAU,GAAG7B,QAAQ,CAACuB,IAAD,CAA3B;AACAf,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,QAAAA,eAAe,CAACa,IAAD,CAAf;AACAX,QAAAA,YAAY,CAACiB,UAAD,CAAZ;AACD,OAZG,CAAN;AAaD,KAdD;;AAeAL,IAAAA,gBAAgB;AACjB,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMM,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AACzC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC,CADyC,CAEzC;;AAEA,UAAMO,GAAG,GAAEF,WAAW,IAAE,WAAb,GAA0B,oCAA1B,GAAiE,4CAA2CA,WAAY,EAAnI,CAJyC,CAMzC;AACA;;AAEA,UAAMb,KAAK,CAACe,GAAD,CAAL,CAAWd,IAAX,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5B,EACLF,IADK,CACAG,IAAI,IAAG;AACXnB,MAAAA,eAAe,CAAC4B,WAAD,CAAf;AACA1B,MAAAA,cAAc,CAACiB,IAAD,CAAd,CAFW,CAIX;;AACAT,MAAAA,YAAY,CAAC,CAACS,IAAI,CAAClB,WAAL,CAAiBU,GAAlB,EAAsBQ,IAAI,CAAClB,WAAL,CAAiB8B,IAAvC,CAAD,CAAZ;AACAjB,MAAAA,UAAU,CAAC,CAAD,CAAV,CANW,CAOX;AACD,KATK,CAAN;AAUD,GAnBD,CApCgB,CAyDhB;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,eAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,KAAK,EAAEf,OAFT;AAGE,YAAA,QAAQ,EAAE2B,iBAHZ;AAAA,mCAKE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAEzB,WAAW,CAAC+B,UAAhD;AAA4D,UAAA,KAAK,EAAE/B,WAAW,CAACgC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,WAAf;AAA2B,UAAA,KAAK,EAAEhC,WAAW,CAACiC,cAA9C;AAA8D,UAAA,KAAK,EAAEjC,WAAW,CAACkC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,OAAf;AAAuB,UAAA,KAAK,EAAElC,WAAW,CAACmC,WAA1C;AAAuD,UAAA,KAAK,EAAEnC,WAAW,CAACoC;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eAmCE,QAAC,GAAD;AACA,QAAA,SAAS,EAAE/B,eADX;AAEA,QAAA,MAAM,EAAEG,SAFR;AAGA,QAAA,IAAI,EAAEI;AAHN;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0CE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,+BACA,QAAC,WAAD;AAAA,kCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CApHD;;GAAMT,G;;KAAAA,G;AAsHN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./MapContainer\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Table from './Table';\nimport {sortData} from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputcountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, SetMapCountries]=useState([]);\n  const [tableData, setTableData]=useState([]);\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng:-40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(()=>{\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(response => response.json())\n    .then(data =>{\n      setCountryInfo(data)\n    });\n  }, []); \n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2, //IND, UK, USA\n          }));\n\n          const sortedData = sortData(data);\n          setCountries(countries);\n          SetMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onChangingCountry = async (event) => {\n    const countryCode = event.target.value;\n    // setInputcountry(countryCode);\n\n    const url= countryCode=='worldwide'? 'https://disease.sh/v3/covid-19/all' :`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    //https://disease.sh/v3/covid-19/all    ----> World wide url\n    // https://disease.sh/v3/covid-19/countries/[countryCode] ---->country wise\n\n    await fetch(url).then(response => response.json())\n    .then(data =>{\n      setInputcountry(countryCode);\n      setCountryInfo(data);\n\n      // console.table(data.countryInfo);\n      setMapCenter([data.countryInfo.lat,data.countryInfo.long]);\n      setMapZoom(4);\n      // console.table(mapCenter);\n    })\n  };\n\n  // console.log(countryInfo);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onChangingCountry}\n            >\n              <MenuItem value={\"worldwide\"}>Worldwide</MenuItem>\n              {/* {countries.map((country) => (\n              <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))} */}\n\n              {/* <MenuItem value={\"worldwide\"}>Worldwide</MenuItem>\n            <MenuItem value={\"worldwide\"}>Option 1</MenuItem>\n            <MenuItem value={\"worldwide\"}>Option 2</MenuItem>\n            <MenuItem value={\"worldwide\"}>lets go yeah</MenuItem> */}\n            </Select>\n          </FormControl>\n        </div>\n        {/* Header */}\n        {/* title+ select input dropdown field  */}\n\n        <div className=\"app_stats\">\n          <InfoBox title=\"Covid Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox title=\"Death\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n\n        {/* infoboxs */}\n        {/* infoboxs */}\n        {/* infoboxs */}\n\n        {/* map */}\n        <Map \n        countries={SetMapCountries}\n        center={mapCenter}\n        zoom={mapZoom}\n        />\n      </div>\n      <div>\n        <Card className=\"app__right\">\n        <CardContent>\n          {/* table */}\n          <h3>Live cases by Country</h3>\n          <Table countries={tableData}/>\n          <h3>Worldwide new Cases</h3>\n          <LineGraph/>\n          {/* graph */}\n        </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}