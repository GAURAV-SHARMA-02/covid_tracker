{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\projects\\\\covid_tracker\\\\covid__tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{}]\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: 'rgba(204,16,52,0.9)',\n          borderColor: '#CC1034',\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/projects/covid_tracker/covid__tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","LineGraph","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,OAAO,GAAC;AACZC,EAAAA,MAAM,EAAC;AACLC,IAAAA,OAAO,EAAC;AADH,GADK;AAIZC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,KAAK,EAAC;AACJC,MAAAA,MAAM,EAAC;AADH;AADC,GAJG;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,IAAI,EAAC,OADE;AAEPC,IAAAA,SAAS,EAAC,KAFH;AAGPC,IAAAA,SAAS,EAAC;AACRC,MAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,IAAvB,EAA4B;AACjC,eAAOd,OAAO,CAACa,WAAW,CAACE,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACD;AAHO;AAHH,GAVG;AAmBZC,EAAAA,MAAM,EAAC;AACLC,IAAAA,KAAK,EAAC,CACJ,EADI;AADD;AAnBK,CAAd;;AA0BA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMwB,cAAc,GAAG,CAACP,IAAD,EAAOQ,SAAP,KAAqB;AAC1C,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBX,IAAI,CAACY,KAArB,EAA4B;AAC1B,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEH,IADgB;AAEnBI,UAAAA,CAAC,EAAEf,IAAI,CAACQ,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFR,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AACDH,MAAAA,aAAa,GAAGV,IAAI,CAACQ,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACD;;AAAA;AACD,WAAOF,SAAP;AACD,GAfD;;AAiBAzB,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESlB,IAAD,IAAU;AACdqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AACA,YAAMS,SAAS,GAAGF,cAAc,CAACP,IAAD,CAAhC;AACAM,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE,QAAC,IAAD;AACA,MAAA,OAAO,EAAEtB,OADT;AAEE,MAAA,IAAI,EAAE;AACJoC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,eAAe,EAAE,qBADnB;AAEEC,UAAAA,WAAW,EAAC,SAFd;AAGEzB,UAAAA,IAAI,EAAEA;AAHR,SADQ;AADN;AAFR;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA/CQK,S;;KAAAA,S;AAiDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options={\r\n  legend:{\r\n    display:false,\r\n  },\r\n  elements:{\r\n    point:{\r\n      radius:0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips:{\r\n    mode:\"index\",\r\n    intersect:false,\r\n    callbacks:{\r\n      label: function (tooltipItem, data){\r\n        return numeral(tooltipItem.value).format(\"+0,0\")\r\n      },\r\n    },\r\n  },\r\n  scales:{\r\n    xAxes:[\r\n      {}\r\n    ]\r\n  }\r\n}\r\n\r\nfunction LineGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  const buildChartData = (data, casesType) => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for(let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    };\r\n    return chartData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const chartData = buildChartData(data);\r\n        setData(chartData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Line\r\n      options={options}\r\n        data={{\r\n          datasets: [\r\n            {\r\n              backgroundColor: 'rgba(204,16,52,0.9)',\r\n              borderColor:'#CC1034',\r\n              data: data,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n      <h1>I am graph</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}