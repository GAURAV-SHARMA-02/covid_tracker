{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\projects\\\\covid_tracker\\\\covid__tracker\\\\src\\\\LineGraph.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  casesType = \"cases\"\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    _s();\n\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      useEffect(() => {\n        const fetchData = async () => {\n          await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n            let chartData = buildChartData(data, \"cases\"); // console.log(data);\n\n            setData(chartData);\n          });\n        };\n\n        fetchData();\n      }, []);\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  _s(buildChartData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16,52,0.9)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LineGraph, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/projects/covid_tracker/covid__tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","setData","buildChartData","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({casesType=\"cases\"}) {\r\n  const [data, setData] = useState({});\r\n\r\n  const buildChartData = (data, casesType) => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      useEffect(() => {\r\n        const fetchData = async () => {\r\n          await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              let chartData = buildChartData(data, \"cases\");\r\n              // console.log(data);\r\n    \r\n              setData(chartData);\r\n            });\r\n        };\r\n    \r\n        fetchData();\r\n      }, []);\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Line\r\n        options={options}\r\n        data={{\r\n          datasets: [\r\n            {\r\n              backgroundColor: \"rgba(204,16,52,0.9)\",\r\n              borderColor: \"#CC1034\",\r\n              data: data,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n      <h1>I am graph</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}